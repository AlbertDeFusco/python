#%%%%%%%% Here are the walk through steps for lecture 1.


###Title : Python objects
>>> a=2
>>> id(a)
140732014855424
>>> type(a)
int
>>> print a
2
>>> id(2)
140732014855424
>>> type(2)
int
#just mention garbage collection in passing
#on the command line new numbers can be created and used without names
>>> id(3)
140707583169016
>>> type(5)
int


###Title : Numerical Object and Mathematical functions
>>> help(int)
>>> help(float)
>>> help(complex)

>>> import math
>>> math.<tab>
#explain a little about why using math module would be faster
#integer math returns integers
>>> 4/2
2
>>> 5/2
0

>>> float(5/2)
2.0

#returns correct float if operands are floats
>>> float(5)/2
2.5
>>> 5/float(2)
2.5

#most math functions return floats
>>> math.radians(180)
3.141592653589793

#demonstrate strong typing features
#how do you know when writing a program?
>>> a="test"
>>> math.radians(a)
TypeError: a float is required


###Title : String
>>> "hello" + "Goodbye"
'helloGoodbye'

>>> "hello" + "Goodbye" + 5
TypeError: cannot concatenate 'str' and 'int' objects


###code blocking

#would be nice to show a single example with several variables, looping and
functions
##if and while are not really necessary

>>> y(x+5)
100
>>> y(y(5))
625


#pass by reference to object
>>> def y2(x):
>>>  x=x+1
>>>  print "y2's x: %d" % (id(x))
>>>  return x**2

#assignment of function
>>> a=y
>>> type(a)
function
>>> a(x)
36

#methods of a function's return
>>> def appender(string):
>>>  return string + ", appended"
>>> type(appender)
function
>>> appender("hello")
'hello, appended'
>>> type(appender("hello"))
str
>>> appender("hello").upper()
'HELLO, APPENDED'


